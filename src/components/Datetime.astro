<main class="flex flex-col w-screen gap-5 h-screen items-center justify-center">
  <h1 class="text-8xl font-bold text-center">Sync Up Time</h1>
  <h2 class="text-md font-medium text-center">
    Pick a time and share the link with your friends!
  </h2>
  <form
    action="/post.json"
    method="post"
    enctype="multipart/form-data"
    class="flex flex-col gap-5 items-center"
    id="form"
  >
    <div>
      <label for="date">Date:</label>
      <input
        type="date"
        id="date"
        name="date"
        class="border p-2 rounded mr-2"
      />
      <label for="time">Time:</label>
      <input type="time" id="time" name="time" class="border p-2 rounded" />
      <input type="hidden" name="timezone" id="timezone" />
    </div>

    <button
      type="submit"
      class="bg-slate-400 px-4 font-bold rounded-sm py-2 hover:bg-slate-500 flex gap-2 items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed"
      id="button">
      <div id="loader" class="loader hidden"></div>
      <p id="button-text">Sync Up!</p>
    </button>
  </form>
</main>

<style>
  .loader {
    width: 24px;
    height: 24px;
    aspect-ratio: 1;
    border-radius: 50%;
    border: 5px solid;
    border-color: #000 #0000;
    animation: l1 1s infinite;
  }
  @keyframes l1 {
    to {
      transform: rotate(0.5turn);
    }
  }
</style>

<script>
  let dateElement: HTMLInputElement,
    timeElement: HTMLInputElement,
    timezoneElement: HTMLInputElement;
  document.addEventListener("DOMContentLoaded", function () {
    // Get the current date and time
    const now = new Date();

    // Format the date and time to match input requirements
    const currentDate = now.toLocaleDateString("en-CA"); // Gets date in 'YYYY-MM-DD' format
    const currentTime = now.toTimeString().substring(0, 5); // Gets time in 'HH:MM' format

    // Set the input values
    dateElement = document.getElementById("date") as HTMLInputElement;
    timeElement = document.getElementById("time") as HTMLInputElement;
    timezoneElement = document.getElementById("timezone") as HTMLInputElement;

    if (dateElement) dateElement.value = currentDate;
    if (timeElement) timeElement.value = currentTime;
    if (timezoneElement)
      timezoneElement.value = Intl.DateTimeFormat().resolvedOptions().timeZone;
  });

  function getSelectedDatetime(): Date | null {
    if (!dateElement || !timeElement || !timezoneElement) return null;

    const date = dateElement.value;
    const time = timeElement.value;

    const datetime = new Date(`${date}T${time}:00`);
    return datetime;
  }

  const form = document.getElementById("form") as HTMLFormElement;
  form.addEventListener("submit", (event) => {
    event.preventDefault();

    const datetime = getSelectedDatetime();
    if (!datetime) return;

    // Add loading state
    const button = document.getElementById("button") as HTMLButtonElement;
    button.disabled = true;
    const buttonText = document.getElementById("button-text") as HTMLParagraphElement;
    buttonText.textContent = "Loading...";
    const loader = document.getElementById("loader") as HTMLDivElement;
    loader.classList.remove("hidden");

    fetch("/post.json", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        datetime: datetime.toISOString(),
        timezone: timezoneElement.value,
      }),
    })
      .then((response) => response.json())
      .then((data) => {
        // redirect to the new post /data
        window.location.href = `${window.location.origin}/timer?value=${data}`;
      });
  });
</script>
